kind: RuleGroup
apiVersion: monitoring.tink.se/v1
metadata:
  name: alerts
  namespace: agents
spec:
  rules:

### Bank side failures
  - alert: BankServerUnavailableForLogin
    expr: |
      # Unavailable outcome above 50%
      (sum(increase(tink_agent_login_total{action=~"login|is-logged-in", outcome=~"unavailable", market!~"NL|SE"}[30m])) by (action,className)
          / sum(increase(tink_agent_login_total{action=~"login|is-logged-in", market!~"NL|SE"}[30m])) by (action,className) > 0.50)
      # At least this many attempts.
      and sum(increase(tink_agent_login_total{action=~"login|is-logged-in", market!~"NL|SE"}[30m])) by (action,className) > 10
    for: 5m
    labels:
      severity: ping
      who: integration
    annotations:
      description: Login unavailable rate is above 50% ( <{ $value }> ) for the last 30 minutes.
        Investigate immediately.
      summary: Login unavailable rate is above 50% ( <{ $value }> ) for <{ $labels.className }>
        the last 30 minutes.
      tags: <{ $labels.className }>

  - alert: BankServerUnavailableForRefresh
    expr: |
      # Unavailable outcome above 50%
      (sum(increase(tink_agent_refresh_total{outcome=~"unavailable", market!~"NL|SE"}[30m])) by (className)
          / sum(increase(tink_agent_refresh_total{market!~"NL|SE"}[30m])) by (className) > 0.50)
      # At least this many attempts.
      and sum(increase(tink_agent_refresh_total{market!~"NL|SE"}[30m])) by (className) > 10
    for: 5m
    labels:
      severity: ping
      who: integration
    annotations:
      description: Refresh unavailable rate is above 50% ( <{ $value }> ) for the last 30 minutes.
        Investigate immediately.
      summary: Refresh unavailable rate is above 50% ( <{ $value }> ) for <{ $labels.className }>
        the last 30 minutes.
      tags: <{ $labels.className }>

### Agent level login failures
  - alert: HighProviderFailedLoginRatio
    expr: |
      # Never trigger on agents with less than 40 login attempts past 60 minutes.
      # This filters out small agents which are less critical to fix quickly
      sum(increase(tink_agent_login_total{action="login", market!~"NL|SE"}[1h])) BY (className,provider) > 40 and
      # Agents where more than 20% of the login attempts fail.
      sum(increase(tink_agent_login_total{action="login",outcome="failed", market!~"NL|SE"}[30m])) BY (className,provider) / sum(increase(tink_agent_login_total{action="login", market!~"NL|SE"}[30m])) BY (className,provider) > 0.20
    for: 30m
    labels:
      severity: urgent
      who: integration
    annotations:
      description: To learn more check out the metric `tink_agent_login_total`. This
        alert never triggers on agents that did less than 10 operations in the
        past 60 minutes.
        https://kibana.aggregation-production.tink.network/app/kibana#/discover?_g=(filters:!(),refreshInterval:(pause:!t,value:0),time:(from:now-1h,to:now))&_a=(columns:!(doc.exception,doc.message),filters:!(('$state':(store:appState),exists:(field:doc.exception),meta:(alias:!n,disabled:!f,index:'26fa2220-73b2-11e8-9a34-dbc1936ede52',key:doc.exception,negate:!f,type:exists,value:exists))),index:'26fa2220-73b2-11e8-9a34-dbc1936ede52',interval:auto,query:(language:lucene,query:'doc.mdc.providerName:%22<{$labels.provider}>%22'),sort:!(!('@timestamp',desc)))
        https://grafana.global-production.tink.network/d/000000078/integration-dashboard?orgId=1&from=now-1h&to=now&var-cluster=aggregation&var-environment=production&var-market=All&var-agent=All&var-provider=<{$labels.provider}>&var-interval=15m&var-app=tink-backend-aggregation
      summary: Agent <{ $labels.className }> has failed over 20%
        of its login attempts the past 60 minutes.
      tags: <{ $labels.className }> , <{ $labels.provider }>

### Provider level fails
  - alert: HighProviderErrorRatio
    expr: |
      # Never triggers on providers that did less than 10 operations past 60
      # minutes. This filters out small providers which are less critical to fix
      # quickly.
      sum(increase(tink_executions_total{market!~"NL|SE"}[1h])) BY (provider) > 10 and
      # Providers where over 50% of the requests have failed.
      ratio:tink_provider_errors:delta60m > 50
    for: 15m
    labels:
      severity: ping
      who: integration
    annotations:
      description: Investigate further in https://kibana.global.tink.network/goto/e0e04ba547d2d76936afa0788febabc8
        (and possibly add the provider in search query). This alert never triggers
        on providers that did less than 10 operations past 60 minutes.
      summary: Provider <{ $labels.provider }> has failed over 50%
        of its operations the past 60 minutes

### Not able to refresh certain refreshable items
  - alert: ProviderNotAbleToFetchCheckingAccounts
    expr: |
      sum(increase(tink_accounts_refresh_total[1h])) BY (provider) > 10 and
      ratio:tink_no_checking_accounts_fetched:delta1h > 0.99 and
      ratio:tink_no_checking_accounts_fetched:delta1w < 0.2
    for: 2h
    labels:
      severity: urgent
      who: integration
    annotations:
      description: No checking accounts fetched for <{ $labels.provider }>
        for 2 hours. Over 80% of users used to have checking accounts.
      summary: No checking accounts fetched for <{ $labels.provider }>
        for 2 hours.

  - alert: ProviderNotAbleToFetchSavingAccounts
    expr: |
      sum(increase(tink_accounts_refresh_total[1h])) BY (provider) > 10 and
      ratio:tink_no_savings_accounts_fetched:delta1h > 0.99 and
      ratio:tink_no_savings_accounts_fetched:delta1w < 0.8
    for: 2h
    labels:
      severity: urgent
      who: integration
    annotations:
      description: No savings accounts fetched for <{ $labels.provider }>
        for 2 hours. Over 20% of users used to have saving accounts.
      summary: No savings accounts fetched for <{ $labels.provider }>
        for 2 hours.

  - alert: ProviderNotAbleToFetchCreditCardAccounts
    expr: |
      sum(increase(tink_accounts_refresh_total[1h])) BY (provider) > 10 and
      ratio:tink_no_creditcards_accounts_fetched:delta1h > 0.99 and
      ratio:tink_no_creditcards_accounts_fetched:delta1w < 0.85
    for: 2h
    labels:
      severity: urgent
      who: integration
    annotations:
      description: No credit card accounts fetched for <{ $labels.provider }>
        for 2 hours. Over 15% of users used to have credit card accounts.
      summary: No credit card accounts fetched for <{ $labels.provider }>
        for 2 hours.

  - alert: ProviderNotAbleToFetchInvestmentAccounts
    expr: |
      sum(increase(tink_accounts_refresh_total[1h])) BY (provider) > 10 and
      ratio:tink_no_investment_accounts_fetched:delta1h > 0.99 and
      ratio:tink_no_investment_accounts_fetched:delta1w < 0.9
    for: 2h
    labels:
      severity: urgent
      who: integration
    annotations:
      description: No investment accounts fetched for <{ $labels.provider }>
        for 2 hours. Over 15% of users used to have investment accounts.
      summary: No investment card accounts fetched for <{ $labels.provider }>
        for 2 hours.

  - alert: ProviderNotAbleToFetchLoanAccounts
    expr: |
      sum(increase(tink_accounts_refresh_total[1h])) BY (provider) > 10 and
      ratio:tink_no_loan_accounts_fetched:delta1h > 0.99 and
      ratio:tink_no_loan_accounts_fetched:delta1w < 0.9
    for: 2h
    labels:
      severity: urgent
      who: integration
    annotations:
      description: No loan accounts fetched for <{ $labels.provider }>
        for 2 hours. Over 15% of users used to have loan accounts.
      summary: No loan card accounts fetched for <{ $labels.provider }>
        for 2 hours.

### Precomputations.
    # Calculate the ratio of not fetching any accounts (with certain type)
    # over certain interval of time.
  - record: ratio:tink_no_checking_accounts_fetched:delta1h
    expr: sum(increase(tink_no_accounts_fetched_total {type="CHECKING"} [1h])) BY (provider)
        / sum(increase(tink_accounts_refresh_total[1h])) BY (provider)
  - record: ratio:tink_no_savings_accounts_fetched:delta1h
    expr: sum(increase(tink_no_accounts_fetched_total {type="SAVINGS"} [1h])) BY (provider)
        / sum(increase(tink_accounts_refresh_total[1h])) BY (provider)

  - record: ratio:tink_no_creditcards_accounts_fetched:delta1h
    expr: sum(increase(tink_no_accounts_fetched_total {type="CREDIT_CARD"} [1h])) BY (provider)
        / sum(increase(tink_accounts_refresh_total[1h])) BY (provider)

  - record: ratio:tink_no_investment_accounts_fetched:delta1h
    expr: sum(increase(tink_no_accounts_fetched_total {type="INVESTMENT"} [1h])) BY (provider)
        / sum(increase(tink_accounts_refresh_total[1h])) BY (provider)

  - record: ratio:tink_no_loan_accounts_fetched:delta1h
    expr: sum(increase(tink_no_accounts_fetched_total {type="LOAN"} [1h])) BY (provider)
        / sum(increase(tink_accounts_refresh_total[1h])) BY (provider)

    # Calculate the the ration of provider errors (without authentication errors).
  - record: ratio:tink_provider_errors:delta60m
    expr: 100 * ((sum(increase(tink_temporary_errors_total[1h])) BY (provider)) /
      (sum(increase(tink_executions_total[1h])) BY (provider)))

# Payments SE market dashboard
  - record: sum:tink_transfers_in_sweden:delta15m
    expr: sum(increase(tink_agent_transfer_total{market="SE"}[15m])) or on() vector(0)

  - record: sum:tink_transfers_in_sweden:delta12h
    expr: sum(increase(tink_agent_transfer_total{market="SE"}[12h])) or on() vector(0)

  - record: sum:tink_successful_transfers_in_sweden:delta15m
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="completed"}[15m])) or on() vector(0)

  - record: sum:tink_successful_transfers_in_sweden:delta12h
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="completed"}[12h])) or on() vector(0)

  - record: sum:tink_failed_transfers_in_sweden:delta15m
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="failed"}[15m])) or on() vector(0)

  - record: sum:tink_failed_transfers_in_sweden:delta12h
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="failed"}[12h])) or on() vector(0)

  - record: sum:tink_cancelled_transfers_in_sweden:delta15m
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="cancelled"}[15m])) or on() vector(0)

  - record: sum:tink_cancelled_transfers_in_sweden:delta12h
    expr: sum(increase(tink_agent_transfer_total{market="SE", outcome="cancelled"}[12h])) or on() vector(0)

  # Precompute realtime banking metrics
  - record: ratio:tink_aggregation_market_success:delta5m
    expr: sum(increase(tink_aggregation_successful_market_total[5m])) by (market)
        / sum(increase(tink_aggregation_total_market_total[5m])) by (market) > 0

  - record: ratio:tink_aggregation_operation_success:delta5m
    expr: sum(increase(tink_aggregation_successful_operations_total[5m])) by (operation)
       / sum(increase(tink_aggregation_total_operations_total[5m])) by (operation) > 0

  - record: ratio:tink_aggregation_market_operation_success:delta5m
    expr: sum(increase(tink_aggregation_successful_market_operations_total[5m])) by (operation, market)
      / sum(increase(tink_aggregation_total_market_operations_total[5m])) by (operation, market) > 0

  # Precompute statistics
  - record: statistics:tink_aggregation_market_success:delta5m:avg1w
    expr: avg_over_time((ratio:tink_aggregation_market_success:delta5m > 0)[1w:])

  - record: statistics:tink_aggregation_market_success:delta5m:stddev1w
    expr: stddev_over_time((ratio:tink_aggregation_market_success:delta5m > 0)[1w:])

  - record: statistics:tink_aggregation_operation_success:delta5m:avg1w
    expr: avg_over_time((ratio:tink_aggregation_operation_success:delta5m > 0)[1w:])

  - record: statistics:tink_aggregation_operation_success:delta5m:stddev1w
    expr: stddev_over_time((ratio:tink_aggregation_operation_success:delta5m > 0)[1w:])

  - record: statistics:tink_aggregation_market_operation_success:delta5m:avg1w
    expr: avg_over_time((ratio:tink_aggregation_market_operation_success:delta5m > 0)[1w:])

  - record: statistics:tink_aggregation_market_operation_success:delta5m:stddev1w
    expr: stddev_over_time((ratio:tink_aggregation_market_operation_success:delta5m > 0)[1w:])

