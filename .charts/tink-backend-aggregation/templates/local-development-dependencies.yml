{{- if eq "local" .Values.Cluster }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggregationdb
  namespace: default
  labels:
    app: aggregationdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aggregationdb
  template:
    metadata:
      labels:
        app: aggregationdb
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: "tink"
            - name: MYSQL_USER
              value: "tink"
            - name: MYSQL_PASSWORD
              value: "tink"

          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"

          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql
      volumes:
        - name: mysql
          hostPath:
            path: /data/pv-aggregationdb
---
kind: Service
apiVersion: v1
metadata:
  name: aggregationdb
  namespace: default
spec:
  selector:
    app: aggregationdb
  ports:
    - protocol: TCP
      port: 3306
      targetPort: mysql
      nodePort: 31001
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache
  namespace: default
  labels:
    app: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache
  template:
    metadata:
      labels:
        app: cache
    spec:
      containers:
        - name: memcached
          image: memcached:1.4
          ports:
            - containerPort: 11211
              name: memcached
          command: ["memcached"]
          args: ["-m", "64"]

          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
---
kind: Service
apiVersion: v1
metadata:
  name: cache
  namespace: default
spec:
  selector:
    app: cache
  ports:
    - protocol: TCP
      port: 11211
      targetPort: memcached
      nodePort: 31005
  type: NodePort
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordination
  namespace: default
  labels:
    app: coordination
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coordination
  template:
    metadata:
      labels:
        app: coordination
    spec:
      containers:
        - name: zookeeper
          image: zookeeper:3.5
          ports:
            - containerPort: 2181
              name: zookeeper
          volumeMounts:
            - mountPath: /tmp/zookeeper
              name: zookeeper

          resources:
            requests:
              memory: "200Mi"
              cpu: "200m"
            limits:
              memory: "200Mi"
              cpu: "200m"

      imagePullSecrets:
        - name: tink-containers
      volumes:
        - name: zookeeper
          hostPath:
            path: /data/pv-coordination
---
kind: Service
apiVersion: v1
metadata:
  name: coordination
  namespace: default
spec:
  selector:
    app: coordination
  ports:
    - protocol: TCP
      port: 2181
      targetPort: zookeeper
      nodePort: 31003
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: providerdb
  namespace: default
  labels:
    app: providerdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: providerdb
  template:
    metadata:
      labels:
        app: providerdb
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
              name: mysql
          env:
            - name: MYSQL_ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MYSQL_DATABASE
              value: "provider"
            - name: MYSQL_USER
              value: "tink"
            - name: MYSQL_PASSWORD
              value: "tink"

          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"

          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql
      volumes:
        - name: mysql
          hostPath:
            path: /data/pv-providerdb
---
kind: Service
apiVersion: v1
metadata:
  name: providerdb
  namespace: default
spec:
  selector:
    app: providerdb
  ports:
    - protocol: TCP
      port: 3306
      targetPort: mysql
      nodePort: 31006
  type: NodePort
{{- end  }}
