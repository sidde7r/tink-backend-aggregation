steps:

  - name: ':white_check_mark: Test'
    branches: '!master'
    command: .buildkite/run-unit-tests.sh
    timeout_in_minutes: 30
    plugins:
      docker-compose#v2.5.1:
        run: "app"
        config: "docker/docker-compose.bazel.yml"

  - name: ":kubernetes: Helm Lint"
    branches: '!master'
    command: /go/bin/kubernetes-generator --mode lint --repo .
    timeout_in_minutes: 5
    agents:
      queue: new
    plugins:
      docker#v2.0.0:
        image: gcr.io/tink-containers/kubernetes-generator:latest
        always-pull: true

  - wait

  - name: ':docker: tink-backend-aggregation'
    branches: 'staging'
    command: .buildkite/build-and-push-docker.sh //docker:aggregation_push
    timeout_in_minutes: 10
    plugins:
      docker-compose#v2.5.1:
        run: "app"
        config: "docker/docker-compose.bazel.yml"

  - name: ':docker: tink-backend-provider-configuration'
    branches: 'staging'
    command: .buildkite/build-and-push-docker.sh //docker:provider_configuration_push
    timeout_in_minutes: 10
    plugins:
      docker-compose#v2.5.1:
        run: "app"
        config: "docker/docker-compose.bazel.yml"

  - name: ':docker: tink-backend-integration'
    branches: 'staging'
    command: .buildkite/build-and-push-docker.sh //src/integration/service:docker_push
    timeout_in_minutes: 10
    plugins:
      docker-compose#v2.5.1:
        run: "app"
        config: "docker/docker-compose.bazel.yml"

  - name: ':debian: tink-backend-aggregation'
    branches: 'staging'
    command: .buildkite/build-and-upload-deb.sh //deb:aggregation deb/tink-backend-aggregation tink-backend-aggregation
    timeout_in_minutes: 10
    plugins:
      docker-compose#v2.5.1:
        run: "app"
        config: "docker/docker-compose.bazel.yml"

  - wait

  - name: ':pipeline: Generate trigger steps'
    branches: 'master'
    command: .buildkite/generate-trigger-steps-master.py | buildkite-agent pipeline upload

  - wait

  - name: "Trigger release-train for tink-backend-integration"
    branches: 'master'
    trigger: "release-train"
    async: false
    build:
      message: "$BUILDKITE_MESSAGE"
      branch: "tink-backend-integration"
      env:
        CHART: "tink-backend-integration"
        REPO_NAME: "tink-backend-aggregation"
        REPO_SHA1: "$BUILDKITE_COMMIT"
        VERSION: "$VERSION"
        PRUNE: "True"
