package se.tink.backend.core;

import com.google.common.io.Files;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import org.junit.Assert;
import org.junit.Test;
import se.tink.backend.rpc.TinkMediaType;

public class DocumentContainerTest {

    // Encoded the file in data/test/test.pdf using an online base64 encoder
    private static final String ONLINE_ENCODED_PDF = "";

    @Test
    public void testSerialization() throws FileNotFoundException {
        File initialFile = new File("data/test/test.pdf");
        InputStream is = new FileInputStream(initialFile);

        DocumentContainer container = new DocumentContainer(TinkMediaType.APPLICATION_PDF, is);
        Assert.assertEquals(ONLINE_ENCODED_PDF, container.getBase64Representation());
    }

    @Test
    public void testDeserialization() throws IOException {

        DocumentContainer container = new DocumentContainer();
        container.setMimeType(TinkMediaType.APPLICATION_PDF);
        container.setBase64Representation(ONLINE_ENCODED_PDF);

        File tmpFile = File.createTempFile("pdf-from-string", "pdf");
        byte[] bytes = container.getBinaryDocument();
        Files.write(bytes, tmpFile);

        InputStream is2 = new FileInputStream(tmpFile);

        DocumentContainer container2 = new DocumentContainer(TinkMediaType.APPLICATION_PDF, is2);

        Assert.assertEquals(ONLINE_ENCODED_PDF, container2.getBase64Representation());
    }
}