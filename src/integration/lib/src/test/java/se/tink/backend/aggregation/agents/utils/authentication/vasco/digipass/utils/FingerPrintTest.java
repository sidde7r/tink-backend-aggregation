package se.tink.backend.aggregation.agents.utils.authentication.vasco.digipass.utils;

import org.junit.Assert;
import org.junit.Test;
import se.tink.backend.aggregation.agents.utils.authentication.vasco.digipass.StaticVector;
import se.tink.backend.aggregation.agents.utils.encoding.EncodingUtils;

public class FingerPrintTest {
    private static final String XFAD =

    private static final String FINGERPRINT =
            "CF190D3E7E8D6C460DADBB9D9C7E0E63FE5AD07E5E1A0B32320EBAF4978503E3";
    private static final String EXPECTED_DIVERSIFIER = "f5de9c78";

    @Test
    public void testDiversifier() {
        StaticVector staticVector = StaticVector.createFromXfad(XFAD);
        byte[] diversifier = FingerPrintUtils.getFingerPrintDiversifier(FINGERPRINT, staticVector);
        String diversifierHex = EncodingUtils.encodeHexAsString(diversifier);

        Assert.assertEquals(
                "Fingerprint diversifier mismatch.", EXPECTED_DIVERSIFIER, diversifierHex);
    }
}
