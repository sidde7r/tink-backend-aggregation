package se.tink.backend.aggregation.agents.utils.authentication.vasco.digipass;

import org.junit.Assert;
import org.junit.Test;

public class DigipassTest {
    @Test
    public void serializationTest() {
        Digipass a = new Digipass();
        a.initializeRegistrationData("foobar");
        String as = a.serialize();

        Digipass b = new Digipass();
        b.deserialize(as);
        String bs = b.serialize();

        Assert.assertEquals("Serialization/Deserialization failed.", as, bs);
    }

    @Test
    public void ensureDecryptActivationData_whenPartiallyDeserialized_doesNotThrow() {
        Digipass cryptoModule = new Digipass();
        cryptoModule.deserialize(
                "{\"ecKeyPair\":\"{\\\"privKey\\\":\\\"308193020100301306072a8648ce3d020106082a8648ce3d030107047930770201010420524c5d3d0cc0887a27928bdd21003f3b7dded8eea11c7ccbaa06faf438dfc87da00a06082a8648ce3d030107a144034200047686f40cb052a962ecd433b3e07c1bd780e5e167861fa6619c29a4eb29ed4fd21523d8c567acc2a93cf45c4e4bd0459155872620863c0abfabdf12e71f6b5c9a\\\",\\\"alg\\\":\\\"EC\\\",\\\"pubKey\\\":\\\"3059301306072a8648ce3d020106082a8648ce3d030107034200047686f40cb052a962ecd433b3e07c1bd780e5e167861fa6619c29a4eb29ed4fd21523d8c567acc2a93cf45c4e4bd0459155872620863c0abfabdf12e71f6b5c9a\\\"}\",\"clientNonce\":\"TI3dXw==\",\"otpCounter\":\"0\",\"fingerPrint\":\"4fbad6fd6412dfd91f1748d8383e8f8820b5bb185e0a6dd1aa467d568fd443bb\",\"activationPassword\":\"pYlk51\"}");

        String serverInitialVector = "51BA3AF7D3C8553ABE5654BCB89FBA80";
        String encryptedNonces = "40B6BE9CFA1308D62C6DC4322D1E2530";
        String encryptedServerPublicKey =
                "98D0064AE1CA70EA07AD80C18207E1B70B5FF4A173205CC22814AF20207CD26498B698801A6056F0C4AF84288FB53CC4DC708F3F817D8E2DE4BCE9AA6E31A739";
        String xfad =
                "FF619F637B5BA5CF37E4004A31C37807B3E48991479B35BE06448C557A733EEBB59FEBABB841A8C0A9F884084B9C009AA81FDA9C4B44474048697CEE13D72C5DF8180633D11D26521714E0CC2C60A5258ADF55A646A26E1BECAF2E1CD673646E49BEDFA3BEDB2B9C6A28E06A375CA5A16E8776DE8D54F5E626A149363722A81960F3250DB38858B72BE6392E4472925F8D3AA63092E1734BF2BA8F7942F7FEAC2E56340D7F4F81E4A2153AFD9F32A2F5C08F68D8B549F67AAD9299BA76414C80EF9B718621B7B5A638548B077C776A3A37CD5F07BF64412D10203C265BB0F2F923262CBFE4A403F496876152D10A0F9ED5DADF3AFFD7E75F6C7BA91747DE623E9E9DDA305C4E1C53E4F15F60C5B3AE3B090F74B30488BF95C63E3A80843A9BCC0AC1D9121D9EC7F8D3380192E2547405B8C6E6CFC9E977C6C153340D34FA1510023490CEED378AFC36DE1D5A9B265B1A573D44717CF6BD95EB9D4EED4FF01D6E45ED2A2D8E7B5D2B38E7AB97BAF0212E6185734B699AA22B35567836762DFAC43645BF152602CD794A192D2C979D965221E107A2E10EA8ED94A5931AB83D92D16D8F3F2EB43E06F8065CF21AFB5B53D7E8BD67B5F2A4CD0FD0FFA9CEBDDF113DAE5CC09BD552D4BDB8AFC60F5E0DC6F851B8AE3686A08D6470E1343A847AA0492C9BC6ECE89EA975E520E7C5673960C748EC2D96FC6BE082979EBA049339606BCBAB3AA8A308052E2BA9E4EC5F4F3DC8B19BF25E42A7612293E8A20F46EDE425685358F643B3D9E0F5EA712FD42D7CB5303DC162D3980124D8336AE954E1EDE9004F4709B4119089885E336C426C03E0D786C3B7795FEB9BE29B1935A024D83277B9FE394ABBCE2F6F82558AECFEFD605BCF72FFBB17AC0F105E92BC69217309E17B88D82CD38B97636C5B26D76A57AA4A90C467D13FCD763BC8250CA3D82923C1BD957D3215B4F018594B64C407989960C9EEBB218629EFB6A0EB4B458FD4DD3BE369B991FDEC9E5AA598E2A7D5985A";
        String challenge = "6647008520356569";

        cryptoModule.decryptActivationData(
                serverInitialVector, encryptedNonces, encryptedServerPublicKey, xfad, challenge);
    }
}
