package se.tink.backend.aggregation.agents.nxgen.serviceproviders.openbanking.ingbase.utils;

import org.assertj.core.api.Assertions;
import org.junit.Test;

public class IngBaseUtilsTest {

    private static final String VALID_PUBLIC_KEY_CERTIFICATE =
            "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";
    private static final String INVALID_PUBLIC_KEY_CERTIFICATE =
            "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";

    @Test(expected = IllegalStateException.class)
    public void shouldThrowExceptionWhenCertificateIsNull() {
        IngBaseUtils.getCertificateSerial(null);
    }

    @Test(expected = IllegalStateException.class)
    public void shouldThrowExceptionWhenCertificateIsEmpty() {
        IngBaseUtils.getCertificateSerial("");
    }

    @Test(expected = IllegalStateException.class)
    public void shouldThrowExceptionWhenCertificateIsNotEncodedAndInvalid() {
        IngBaseUtils.getCertificateSerial("INVALID_CERTIFICATE_NOT_ENCODED");
    }

    @Test(expected = IllegalStateException.class)
    public void shouldThrowExceptionWhenCertificateIsEncodedButInvalid() {
        IngBaseUtils.getCertificateSerial(INVALID_PUBLIC_KEY_CERTIFICATE);
    }

    @Test
    public void shouldRetrieveSerialNumberFromCertificate() {
        Assertions.assertThat(IngBaseUtils.getCertificateSerial(VALID_PUBLIC_KEY_CERTIFICATE))
                .isEqualTo("SN=44ba0c31580926fcda18ddee8d1ac0a9");
    }
}
