package se.tink.backend.aggregation.agents.banks.skandiabanken.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

@JsonIgnoreProperties(ignoreUnknown = true)
public class TransactionEntity {

	// Pattern is used to make description more readable. Will match strings that ends with "description\\city\"
	private static Pattern merchantFormatPattern = Pattern.compile("(.*)\\\\\\\\(.*)\\\\$");

	private int order;
	private int page;
	
	public int getPage() {
		return page;
	}

	public void setPage(int page) {
		this.page = page;
	}

	public int getOrder() {
		return order;
	}

	public void setOrder(int order) {
		this.order = order;
	}

	private String id;
	private String amount;
	private boolean amountNegative;
	private String balance;
	private String caption;
	private String converted;
	private String currencyCode;
	private String merchant;
	private String reference;
	private String settled;
	private String time;
	private String timestamp;
	private int type;
	private String uuid;
	private String date;

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getAmount() {
		return amount;
	}

	public void setAmount(String amount) {
		this.amount = amount;
	}

	public boolean isAmountNegative() {
		return amountNegative;
	}

	public void setAmountNegative(boolean amountNegative) {
		this.amountNegative = amountNegative;
	}

	public String getBalance() {
		return balance;
	}

	public void setBalance(String balance) {
		this.balance = balance;
	}

	public String getCaption() {
		return caption;
	}

	public void setCaption(String caption) {
		this.caption = caption;
	}

	public String getConverted() {
		return converted;
	}

	public void setConverted(String converted) {
		this.converted = converted;
	}

	public String getCurrencyCode() {
		return currencyCode;
	}

	public void setCurrencyCode(String currencyCode) {
		this.currencyCode = currencyCode;
	}

	public String getMerchant() {
		return merchant;
	}

	public void setMerchant(String merchant) {
		this.merchant = formatMerchantName(merchant);
	}

	public String getReference() {
		return reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	public String getSettled() {
		return settled;
	}

	public void setSettled(String settled) {
		this.settled = settled;
	}

	public String getTime() {
		return time;
	}

	public void setTime(String time) {
		this.time = time;
	}

	public String getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(String timestamp) {
		this.timestamp = timestamp;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public String getUuid() {
		return uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    // Generated by Eclipse.
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((amount == null) ? 0 : amount.hashCode());
        result = prime * result + ((date == null) ? 0 : date.hashCode());
        result = prime * result + ((merchant == null) ? 0 : merchant.hashCode());
        result = prime * result + ((settled == null) ? 0 : settled.hashCode());
        result = prime * result + ((timestamp == null) ? 0 : timestamp.hashCode());
        result = prime * result + type;
        return result;
    }

    // Generated by Eclipse.
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        TransactionEntity other = (TransactionEntity) obj;
        if (amount == null) {
            if (other.amount != null)
                return false;
        } else if (!amount.equals(other.amount))
            return false;
        if (date == null) {
            if (other.date != null)
                return false;
        } else if (!date.equals(other.date))
            return false;
        if (merchant == null) {
            if (other.merchant != null)
                return false;
        } else if (!merchant.equals(other.merchant))
            return false;
        if (settled == null) {
            if (other.settled != null)
                return false;
        } else if (!settled.equals(other.settled))
            return false;
        if (timestamp == null) {
            if (other.timestamp != null)
                return false;
        } else if (!timestamp.equals(other.timestamp))
            return false;
        if (type != other.type)
            return false;
        return true;
    }

	/**
	 * Will re-format merchants/descriptions from "name\\city\" to "name, city"
	 */
	private String formatMerchantName(String input) {
		Matcher matcher = merchantFormatPattern.matcher(input);

		if (matcher.matches()) {
			return matcher.group(1).trim() + ", " + matcher.group(2).trim();
		}

		return input;
	}

}
