syntax = "proto3";

option java_multiple_files = true;
option java_package = "se.tink.backend.secretservice.grpc";
option java_outer_classname = "Protos";
option go_package = "proto";

// Stick to one service per app, otherwise your microservice is not so micro.
service InternalCertificateService {
    rpc GetQwacCertificateWithEncryptedPrivateKey (QwacCertificateRequest) returns (CertificateResponse) {}
    rpc GetQsealcCertificateWithEncryptedPrivateKey (QsealcCertificateRequest) returns (CertificateResponse) {}
    rpc GetQsealcCertificate (QsealcCertificateRequest) returns (CertificateResponse) {}
    rpc GetQsealcPrivateKeyEncrypted(QsealcCertificateRequest) returns (CertificateResponse) {}
}

service ExternalCertificateService {
    rpc GetUploadKey (PublicKeyRequest) returns (PublicKeyResponse) {}
    rpc ConvertEncryptedPrivateKey (ConvertEncryptedPrivateKeyRequest) returns (ConvertEncryptedPrivateKeyResponse) {}
    rpc PutEncryptedCertificate (CertificateUploadRequest) returns (CertificateUploadResponse) {}
}

service InternalSecretsService {
    rpc GetSecrets (GetSecretsRequest) returns (GetSecretsResponse) {}
    rpc GetEncryptedSecrets (GetSecretsRequest) returns (GetEncryptedSecretsResponse) {}
    rpc GetAllSecrets (GetSecretsRequest) returns (GetAllSecretsResponse) {}
}

service ExternalSecretsService {
    rpc GetUploadKey (PublicKeyRequest) returns (PublicKeyResponse) {}
    rpc PutTppSecrets (PutTppSecretsRequest) returns (PutTppSecretsResponse) {}
}

enum CertType {
    QWAC = 0;
    QSEALC = 1;
}

message PutTppSecretsRequest {
    string appId = 1;
    string financialInstitutionId = 2;
    repeated TppSecret secrets = 3;
    repeated EncryptedTppSecret encryptedSecrets = 4;
}

message PutTppSecretsResponse {

}

message TppSecret {
    string key = 1;
    string value = 2;
}

message EncryptedTppSecret {
    string key = 1;
    string value = 2;
}
message GetSecretsRequest {
    string appId =1;
    string financialInstitutionId = 2;
}

message GetAllSecretsResponse {
    repeated TppSecret secrets = 1;
    repeated TppSecret encryptedSecrets = 2;
}

message GetSecretsResponse {
    repeated TppSecret secrets = 1;
}

message GetEncryptedSecretsResponse {
    repeated TppSecret encryptedSecrets = 1;
}

message CertificateUploadRequest {
    string appId = 1;
    string certId = 2;
    string encryptedPrivateKey = 3;
    string uploadKey = 4;
    string certificate = 5;
    CertType certificateType = 6;
    string certFileFormat = 7;
}

message CertificateUploadResponse {
    string appId = 1;
    string certId = 2;
    CertType certificateType = 3;
    string encryptedPrivateKey = 4;
}

message QwacCertificateRequest {
    string appId = 1;
    string certId = 2;
}

message CertificateResponse {
    bytes certificate = 1;
    bytes privateKeyInPlaintext = 2;
    string encryptedPrivateKey = 3;
}

message QsealcCertificateRequest {
    string appId = 1;
    string certId = 2;
}

message PublicKeyRequest {}

message PublicKeyResponse {
    string publicKey = 1;
}

message SignWithEncryptedQsealcRequest {
    string appId = 1;
    string certId = 2;
    bytes dataToSign = 3;
    bytes encryptedPrivateKey = 4;
    string algorithm = 5;
}

message SignWithQsealcResponse {
    bytes signature = 1;
}

message ConvertEncryptedPrivateKeyRequest {
    string appId = 1;
    string certId = 2;
    CertType certType = 3;
    string encryptedPrivateKey = 4;
    string uploadKey = 5;
}

message ConvertEncryptedPrivateKeyResponse {
    string encryptedPrivateKey = 1;
}